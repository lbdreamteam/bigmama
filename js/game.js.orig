/******* Funzioni Client/Server *******/


//NOTES: i problemi per l'update sono dovuti alla non esecuzione di create().
//TODO: - creare nuove funzioni necessarie sul server
//      - fare un sacco di try catch e gestione delle eccezioni!


var eurecaServer,
    myId = 0, //ID del giocatore corrente, inizialmente = 0 viene poi scaricato dal server in eurecaClientSetup
    ready = false,
    clientsList,
    time;

var eurecaClient;

var eurecaClient;

var eurecaClientSetup = function () {
    //create an instance of eureca.io client
    eurecaClient = new Eureca.Client();

    eurecaClient.ready(function (proxy) {
        eurecaServer = proxy;
    });

    // i metodi definiti sotto lo spazio dei nomi "exports" sono disponibili lato server.

    eurecaClient.exports.setId = function (id) {
        myId = id;
        eurecaServer.ClientManagement.Player.Spawn(myId);
    }

    eurecaClient.exports.createPlayer = function (x, y) {
        create(x, y);
        ready = true;
    }

    // Questa è la funzione che riposiziona il player (controllare la versione spostata in Player.js)
<<<<<<< local
=======
    eurecaClient.exports.updatePlayerPosition = function (x, y) {
        
       player.player.x = x;
        player.player.y = y;
    };
>>>>>>> other
}

/****** Funzioni di Gioco ******/

var cursors, //Variabile che gestisce gli input
    player, //Istanza della classe player
    // Dichiarazione del gioco.
    game = new Phaser.Game(800, 600, Phaser.AUTO, 'phaser-example', { preload: preload, create: eurecaClientSetup, update: update, render: render });

function preload () {
    //game.load.spritesheet('player', 'assets/player.png', 175, 247);
    game.load.image('player', 'assets/bullet.png');
<<<<<<< local
    time = game.add.text(15, 50, ' ', { font: '24px Arial', fill: '#333333' });
    game.time.advancedTiming = true;
=======
>>>>>>> other
}

//Variabile necessaria altrimenti nel primo ciclo di update il player non esiste ancora a il gioco crasha
var playerCreated = false;

function create(x, y) {
    clientsList = {};
	
    player = new Player(game, eurecaServer, eurecaClient, myId, x, y);
    playerCreated = true;

    clientsList[myId] = player;

    cursors = game.input.keyboard.createCursorKeys();    
}

var deltatime = 0;

function update () {
    var timeA = Date.now();

    if (playerCreated == true) {
        player.update(cursors, deltatime);
    }

    var timeB = Date.now();

    if (timeB - timeA != 0) {
        deltatime = (timeB - timeA) / 1000;
    };
    time.setText('FPS: ' + game.time.fps);
}

function render() { }
